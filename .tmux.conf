# default key-bind:
# rename window:        ,
# rename session:       $

set-option        -g prefix                       M-q
set-option        -g repeat-time                  1000
set-option        -g allow-rename                 off
set-option        -g renumber-windows             on
set-option        -g window-style                 'bg=black,fg=white'
set-option        -g window-active-style          'bg=black,fg=white'
set-window-option -g status-bg                    blue

# previous
set-window-option -g window-status-fg             black
set-window-option -g window-status-bg             blue
set-window-option -g window-status-current-bg     white

# since tmux 2.9a
set-window-option -g window-status-style          fg=black,bg=blue
set-window-option -g window-status-current-style  bg=white


set-window-option -g window-status-format         ' #W:#{b:pane_current_path}'
set-window-option -g window-status-current-format ' #W:#{b:pane_current_path}'

# map [0, 1...] to [0, 1]
# let a=1-100/(left+1)/100
# let b=1-100/(top+1)/100
# This script seems does not refresh when jump to pane
# set-window-option -g window-status-current-format ' #(_s="◰◱◳◲"; echo ${_s:$(bc<<<$(tmux display -p "3-200/(#{pane_left}+1)/100-100/(#{pane_top}+1)/100")):1}) #W:#{b:pane_current_path}'
set-option        -g pane-border-format           "#{pane_index} #{pane_current_command}"
set-option        -g pane-border-status           off
set-option        -g pane-border-style            'bg=black,fg=blue'
set-option        -g pane-active-border-style     'bg=blue,fg=black'
set-window-option -g main-pane-width              120
set-window-option -g main-pane-height             24

bind-key    M-n command-prompt "rename-window %1"
bind-key    M-P set-window-option synchronize-panes
bind-key    M-s set status

# select pane
bind-key -n M-\ run-shell 'tmux select-pane -t :.+; { test $(tmux display -p "#{window_zoomed_flag}") = 1; } && tmux resize-pane -Z || :'
bind-key -n M-| run-shell 'tmux select-pane -t :.-; { test $(tmux display -p "#{window_zoomed_flag}") = 1; } && tmux resize-pane -Z || :'

# pane layout
bind-key    M-q resize-pane -Z
bind-key    M-1 run-shell 'tmux select-layout main-vertical; tmux resize-pane -x $(($(tmux display -p "#{window_width}") * 60 / 100))'
bind-key    M-2 run-shell 'tmux select-layout main-vertical; tmux resize-pane -x $(($(tmux display -p "#{window_width}") * 40 / 100))'
bind-key    M-3 select-layout tiled
bind-key    M-= select-layout even-horizontal

bind-key    M-9 run-shell 'tmux resize-pane -x $(($(tmux display -p "#{window_width}") * 90 / 100));tmux resize-pane -y $(($(tmux display -p "#{window_height}") * 90 / 100))'

# resize pane
bind-key -r l resize-pane -R 2
bind-key -r h resize-pane -L 2
bind-key -r k resize-pane -U 2
bind-key -r j resize-pane -D 2

# select pane
bind-key    M-h select-pane -L
bind-key    M-j select-pane -D
bind-key    M-k select-pane -U
bind-key    M-l select-pane -R

# move pane
bind-key -r M-H run-shell '_tp=$(tmux display -p "#P"); tmux select-pane -L; tmux swap-pane -d -s :.$_tp'
bind-key -r M-J run-shell '_tp=$(tmux display -p "#P"); tmux select-pane -D; tmux swap-pane -d -s :.$_tp'
bind-key -r M-K run-shell '_tp=$(tmux display -p "#P"); tmux select-pane -U; tmux swap-pane -d -s :.$_tp'
bind-key -r M-L run-shell '_tp=$(tmux display -p "#P"); tmux select-pane -R; tmux swap-pane -d -s :.$_tp'

# record/move pane:
# 1. M-m in a pane to remember the source pane to move.
# 2. move cursor to another pane.
# 3. M-[asdf] to put the pane from above step to the left/top/bottom/right
bind-key    M-m run-shell 'tmux set-buffer $(tmux display -p '"'"'#{session_id}:#{window_index}.#{pane_index}'"'"')'
bind-key    M-M run-shell 'tmux move-pane -v    -s $(tmux show-buffer)'

# pane_current_path does not seem work in tmux 1.8(on linux)
bind-key    M-- run-shell 'tmux split-window -v -c "$(tmux display -p "#{pane_current_path}")"'
bind-key    M-\ run-shell 'tmux split-window -h -c "$(tmux display -p "#{pane_current_path}")"'
# bind-key      c run-shell 'tmux new-window      -c "$(tmux display -p "#{pane_current_path}")"'
bind-key      c run-shell 'tmux new-window      -c "#{pane_current_path}"'
# bind-key      c run-shell 'savepwd "$(tmux display -p "#{pane_current_path}")" && tmux new-window      -c "#{pane_current_path}"'
# bind-key      c run-shell 'savepwd "$(pwd)" && tmux new-window      -c "#{pane_current_path}"'
# bind-key      c new-window      -c '#{pane_current_path}'

bind-key -n M-. next-window
bind-key -n M-, previous-window

bind-key -n M-> swap-window -t :+
bind-key -n M-< swap-window -t :-

# dimm
bind-key    M-d run-shell 'test $(tmux select-pane -g) = "default" && tmux select-pane -P fg=magenta || tmux select-pane -P default'

# reload config
bind-key    M-r source-file ~/.tmux.conf

# copy mode
set-window-option -g mode-keys vi
bind-key    M-[ copy-mode
bind-key    M-u copy-mode -u
bind-key      v paste-buffer

# one good reference: http://tonkersten.com/2011/07/104-switching-to-tmux/
# vim:filetype=conf
