#!/bin/bash


log="log --color --graph --decorate -M"

time_fmt_summary="%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim yellow)- %an%C(reset)%C(bold yellow)%d%C(reset)"
log_fmt_summary="--date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim yellow)- %an%C(reset)%C(bold yellow)%d%C(reset)'"

log1="log --color --graph --decorate --abbrev-commit --date=relative --format=format:'$time_fmt_summary'"
logShort="$log --pretty=oneline --abbrev-commit -M"
diff="diff --color"

gconf="git config --global"

$gconf core.excludesfile ~/xp/git-d/gitignore

galias() { $gconf alias.$1 "$2"; }
ggalias() { galias $1 "$(geta $2)"; }
geta() { git config --get alias.$1; }
lista() { git config --get-regexp "^alias\.l.*" | awk '{print $1}' | cut -c 7-; }

git_version=$(git --version | awk '{print $NF}')
git_version_1=${git_version%%.*}
git_version_2=${git_version#*.}
git_version_2=${git_version_2%%.*}

# git older than 1.8 has no option --no-edit
git_arg_no_edit="--no-edit"
if [ "$git_version_1" = "1" ] && [ "$git_version_2" -lt "8" ]; then
    git_arg_no_edit=""
fi

$gconf user.name "drdr xp"
$gconf user.email drdr.xp@gmail.com
# $gconf push.default upstream
$gconf push.default current
$gconf merge.defaultToUpstream true

$gconf color.diff true
$gconf color.interactive true

$gconf alias.log-full      "$log"
$gconf alias.lg            "$log"
$gconf alias.log-summary   "$log1"
$gconf alias.log-short     "$logShort"
$gconf alias.l             "$logShort"


$gconf alias.bb   "!git   $logShort --simplify-by-decoration --no-pager"
$gconf alias.bmv "branch -m"

$gconf alias.d   "$diff"
$gconf alias.ds  "$diff --stat"
$gconf alias.dc  "$diff --cached"
$gconf alias.d0  "$diff --unified=0"

$gconf alias.cc  '!git commit --verbose -m "squash! $(msg=$(git log -n1 --pretty=format:%s);echo ${msg#squash! })"'
$gconf alias.ci  "commit --verbose"
$gconf alias.cit "commit --verbose -s recursive -X theirs"
$gconf alias.cia "commit --verbose --amend"
$gconf alias.fixup '!git commit --verbose -m "fixup! $(msg=$(git log -n1 --pretty=format:%s);echo ${msg#fixup! })"'

$gconf alias.p  "cherry-pick"
$gconf alias.pe "cherry-pick --edit"

$gconf alias.co  "checkout"
$gconf alias.tr  "checkout --track"

$gconf alias.pu  "push --set-upstream"
$gconf alias.pullall "pull --recurse-submodules=on-demand"

$gconf alias.s   "status --short --ignore-submodules"
$gconf alias.si  "status --ignore-submodules"
$gconf alias.st  "status"

$gconf alias.r   "rebase"
$gconf alias.ri  "rebase --interactive"
$gconf alias.ris "rebase --interactive --autosquash"
$gconf alias.rp  "rebase --preserve-merges"

$gconf alias.ss  "stash save"
$gconf alias.ssk "stash save --keep-index"
$gconf alias.sl  "stash list"
$gconf alias.sp  "stash pop"
$gconf alias.sa  "stash apply"

$gconf alias.m   "merge"
$gconf alias.mf  "merge $git_arg_no_edit --commit --ff-only"
$gconf alias.mc  "merge $git_arg_no_edit --commit --no-ff"
$gconf alias.mt  "mergetool -y -t vimdiff"
$gconf alias.mtg "mergetool -y -t gvimdiff"

$gconf alias.ls  "ls-files"
$gconf alias.lsd "ls-files --deleted"
$gconf alias.lsm "ls-files --modified"
$gconf alias.lso "ls-files --others"
$gconf alias.lsi "ls-files --ignored"
$gconf alias.lss "ls-files --stage"
$gconf alias.lsk "ls-files --killed"
$gconf alias.lsu "ls-files --unmerged"

$gconf alias.sub "submodule"
$gconf alias.subadd "submodule add --branch master"
$gconf alias.subeach "submodule foreach"

$gconf alias.cnf "config --get-regexp "
