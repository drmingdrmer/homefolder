#!/bin/sh

source _git_xp_lib.sh

main()
{
    local cmd="${1-update}"
    local match="$2"

    case "$cmd" in
        -h|--help)
            usage
            exit 0
        ;;
    esac


    local root=$(git_working_root)
    [ "x$root" = "x" ] && die 'looking for git repo root'

    local conf_fn=./.gitsubrepo

    cd "$root"

    [ -f .gitsubrepo_refs ] && rm .gitsubrepo_refs
    > .gitsubrepo_refs

    local base=
    local remote=
    local remote_suffix=
    local prefix=
    local url=
    local ref=
    local localtag=
    while read a b c d; do

        if [ "x$a" = "x" ] || [ "${a:0:1}" = "#" ]; then
            continue
        fi

        # [ base: xp/vim-d ]
        # declare base dir for following sub repo
        #
        # [ remote: https://github.com/ ]
        # declare remote base url for following sub repo
        if test "${a:0:1}" = '['
        then

            case $b in
                base:)
                    base="$c"
                    base="${base%%]}"
                    base="${base%/}/"
                    if test "$base" = "/"; then
                        base=
                    fi
                    ;;
                remote:)
                    remote="$c"
                    ;;
                remote_suffix:)
                    remote_suffix="$c"
                    ;;
                *)
                    echo "invalid tag: $b"
                    exit 1
            esac
            continue
        fi

        prefix="$a"
        url="$b"
        ref="$c"

        if [ "x$match" != "x" ] && [ "x$prefix" != "x$match" ]; then
            continue
        fi

        if [ ".$cmd" = ".add" ]; then
            if [ -d "$prefix" ]; then
                continue
            fi
        fi

        # "xpt drmingdrmer/${prefix} master" is translated to "xpt drmingdrmer/xpt master"
        url=$(eval "echo $url")

        if test "${url%/}" != "$url"; then
            url="${url}$prefix"
        fi

        if test "${url:0:8}" != "https://" && test "${url:0:4}" != "git@"
        then
            url="${remote}${url}${remote_suffix}"
        fi

        fetch_remote "$base$prefix" "$url" "$ref" &

    done<"$conf_fn"
    wait

    while read prefix url ref localtag
    do
        if [ -d "$prefix" ]; then
            git subtree merge --squash \
                --message="Merge squashed $url $ref" \
                --prefix "$prefix" "$localtag" || die merge
        else
            git subtree add --squash \
                --message="Add squashed $url $ref" \
                --prefix "$prefix" "$localtag" || die add
        fi

        # git update-ref -d $localtag

    done<".gitsubrepo_refs"

    rm .gitsubrepo_refs
}

fetch_remote()
{
    local prefix="$1"
    local url="$2"
    local ref="$3"

    local localtag=refs/tags/_gitsubrepo/$prefix
    local mes="$url $ref -> $localtag"

    dd "Start fetching $mes"
    git fetch --no-tags "$url" "$ref:$localtag" || die fetch "$mes"
    echo "$prefix $url $ref $localtag" >> .gitsubrepo_refs
    dd "Done fetching $mes"
}

usage()
{
    cat <<-END
usage: git subrepo

    Merge sub git repo into sub-directory in a parent git dir with git-submerge.
    git-subrepo reads config from ".gitsubrepo" resides in the root of parent
    git working dir.

    Configure file ".gitsubrepo" syntax:

        # set base of remote url to "https://github.com/"
        [ remote: https://github.com/ ]

        # set base of local dir to "plugin"
        [ base: plugin ]

        # <local dir>   <remote uri>            <ref to fetch>
        gutter          airblade/vim-gitgutter  master

        # if <remote uri> ends with "/", <local dir> will be added after "/"
        ansible-vim     DavidWittman/           master

        # change base to "root"
        [ base: ]

        # use a specific commit 1a2b3c4
        ultisnips       SirVer/                 1a2b3c4

    With above config, "git subrepo" will:

    -   fetch master of https://github.com/DavidWittman/ansible-vim
        and put it in:
            <git-root>/plugin/ansible-vim

    -   fetch master of https://github.com/airblade/vim-gitgutter
        and put it in:
            <git-root>/plugin/gutter

    -   fetch commit 1a2b3c4 of https://github.com/SirVer/ultisnips
        and put it in:
            <git-root>/ultisnips

END
}

main "$@"
