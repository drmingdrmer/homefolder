#!/bin/sh

# transfer git repo from one host to another
# 1 clone in "bare" mode
# 2 push all to another host

source _git_xp_lib.sh

conffn=${GIT_TRANSFER_CONF-$HOME/.git-transfer.conf}

base=
src_remote=
dst_remote=

cat $conffn | while read folder src dst x; do

    if [ "x$folder" = "x" ]; then
        continue
    fi

    # [ base: xp/vim-d ]
    # declare base dir for following sub repo
    #
    # [ src: https://github.com/ ]
    # declare src base url for following sub repo
    if test "${folder:0:1}" = '['
    then

        case $src in
            base:)
                base="$dst"
                base="${base%%]}"
                base="$(eval echo "$base")"
                base="${base%/}/"
                if test "$base" = "/"; then
                    base=
                fi
                info "set base to '$base'"
                ;;
            src:)
                src_remote="$dst"
                info "set src base to '$src_remote'"
                ;;
            dst:)
                dst_remote="$dst"
                info "set dst base to '$dst_remote'"
                ;;
            *)
                echo "invalid tag: $b"
                exit 1
        esac
        continue
    fi


    dst="${dst:-$src}"

    folder="$base$folder"
    src="$src_remote$src"
    dst="$dst_remote$dst"

    info "transfer: $folder"
    info "    from: $src"
    info "      to: $dst"

    mkdir -p "$(dirname "$folder")" || die mkdir "$(dirname "$folder")"

    if [ -d $folder ]; then
        :
    else
        info clone $src to $folder
        git clone --bare $src $folder
    fi

    (
    cd $folder \
        && git config remote.origin.fetch '+refs/heads/*:refs/heads/*' \
        && git fetch -p \
        && { { git remote | grep -q "^b$"; } || git remote add b $dst; } \
        && info push to "b($dst)" \
        && git push b --all --prune -f
    )
done
