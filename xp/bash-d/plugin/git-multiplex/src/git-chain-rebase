#!/bin/sh

set -o errexit

usage()
{
    cat <<-END
rebase <base>..<head1> onto <onto>,
then  <head1>..<head2> onto new-<head1>
...
    $0 <onto> <base> <head1> <head2>...

or

Rebase in alphabetic order for all branch found by pattern
    $0 -p pattern1

For example:
    $0 -p 4.*
is equivalent to
    $0 41-aa 42-bb 43-cc ...
END
}

onto="$1"
shift

base="$1"
shift

if [ ".$base" = ".-p" ]; then
    pat="$1"
    shift

    branches="$(
    git branch \
        | awk '{print $NF}' \
        | grep "$pat" \
        | sort
    )"
    echo "Found branches for pattern: $pat"
    echo "$branches"

    $0 $onto $branches "$@"
    exit
fi

head="$1"
if [ ".$head" = "." ]; then
    exit
fi
shift

if [ ".$head" = ".-p" ]; then
    pat="$1"
    shift

    branches="$(
    git branch \
        | awk '{print $NF}' \
        | grep "$pat" \
        | sort
    )"
    echo "Found branches for pattern: $pat"
    echo "$branches"

    $0 $onto $base $branches "$@"
    exit
fi

head_hash=$(git rev-parse $head)


echo "=== rebase:"
echo "      onto: $onto"
echo "   commits: $base..$head"
echo ""

git rebase --onto=$onto "$base" "$head"

# Recursive call this script
$0 $head $head_hash "$@"
