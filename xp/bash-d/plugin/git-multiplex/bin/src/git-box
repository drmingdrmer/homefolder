#!/bin/bash

# cat ~/.gitbox.conf
#
# ~/xpkit fetchpush
# ~/wiki
# ~

# option:        "": auto fetch/rebase/commit/push changes
# option: fetchpush: does not auto commit changes in working dir, but auto fetch/push/rebase
# option: fetchonly: just auto-fetch, it does not auto commit/push/rebase

source _git_xp_lib.sh

set_verbose 1
_init_colors

_git_log_before=_date
_git_log_after=get_pwd


fetch_commit_rebase_push() {
    # old git does not add deleted file into index when 'git add .'
    git add .
    git add -u .
    mes="$(git status --short --ignore-submodules --untracked-files=no | head -n1)"
    git commit -m "$mes" > /dev/null

    branch=$(git_head_branch)
    upstream=$(git_branch_default_upstream $branch)

    git fetch origin --quiet \
        && git rebase origin/$upstream --quiet || err rebase onto origin/$upstream

    while read remote
    do
        git push $remote $branch --quiet \
            && ok push to $remote \
            || err push to $remote

    done<<<"$(git remote)" \
        && ok fetch_commit_rebase_push \
        || err fetch_commit_rebase_push

}


_date() {
    date +"%Y-%m-%d %H:%M:%S "
}

get_pwd() {
    local _pwd=$(pwd)
    local p=${1-$_pwd}
    local home=$HOME
    local stripped=${p#$home}
    if [ ".$stripped" == ".$p" ]; then
        :
    else
        stripped="~$stripped"
    fi
    echo -n " $stripped"
}

main() {
    while ``; do
        local conffn="${GITBOX_CONF_FN-$HOME/.gitbox.conf}"
        if [ -f $conffn ]; then
            while read path option; do
                (
                option=${option:-fetch_commit_rebase_push}
                # change ~ to real home path

                eval "p=$path"
                cd "$p" || die not-found: "$p"

                mes "$option"
                branch=$(git_head_branch)

                if [ ".$option" = ".fetchonly" ]; then

                    git fetch --all --quiet \
                        && ok fetch

                elif [ ".$option" = ".fetchpush" ]; then

                    git fetch --all --quiet \
                        && ok fetch \
                        || err fetch

                    git merge --no-edit --commit --ff-only \
                        && ok merge-ff \
                        || err merge-ff

                    while read remote
                    do
                        git push $remote $branch --quiet \
                            && ok push to $remote \
                            || err push to $remote

                    done<<<"$(git remote)"


                else
                    fetch_commit_rebase_push
                fi
                )
                # ) &
            done <$conffn
            # wait
        else
            echo "no conf file: $conffn"
        fi

        if mac-power is-battery
        then
            echo using battery.. sleep 10 minutes
            sleep 60*10
        else
            sleep 20
        fi
    done
}

main

