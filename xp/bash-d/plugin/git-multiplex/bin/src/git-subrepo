#!/bin/sh

source _git_xp_lib.sh

main()
{
    local cmd="${1-update}"
    local match="$2"

    local root=$(git_working_root)
    [ "x$root" = "x" ] && die 'looking for git repo root'

    local conf_fn=./.gitsubrepo

    cd "$root"

    [ -f .gitsubrepo_refs ] && rm .gitsubrepo_refs
    > .gitsubrepo_refs

    local prefix=
    local url=
    local ref=
    local localtag=
    local status=prefix
    while read a b; do
        if [ "x$a" = "x" ]; then
            continue
        fi

        if [ "$status" = 'prefix' ]; then
            prefix="$a"
            status=url_and_ref
        else
            status=prefix
            if [ "x$match" != "x" ] && [ "x$prefix" != "x$match" ]; then
                continue
            fi

            url="$a"
            ref="$b"

            if [ ".$cmd" = ".add" ]; then
                if [ -d "$prefix" ]; then
                    continue
                fi
            fi

            fetch_remote "$prefix" "$url" "$ref" &
        fi

    done<"$conf_fn"
    wait

    while read prefix url ref localtag
    do
        if [ -d "$prefix" ]; then
            git subtree merge --squash \
                --message="Merge squashed $url $ref" \
                --prefix "$prefix" "$localtag" || die merge
        else
            git subtree add --squash \
                --message="Add squashed $url $ref" \
                --prefix "$prefix" "$localtag" || die add
        fi

        # git update-ref -d $localtag

    done<".gitsubrepo_refs"

    rm .gitsubrepo_refs
}

fetch_remote()
{
    local prefix="$1"
    local url="$2"
    local ref="$3"

    local localtag=refs/tags/_gitsubrepo/$prefix
    local mes="$url $ref -> $localtag"

    dd "Start fetching $mes"
    git fetch --no-tags "$url" "$ref:$localtag" || die fetch "$mes"
    echo "$prefix $url $ref $localtag" >> .gitsubrepo_refs
    dd "Done fetching $mes"
}

main "$@"
