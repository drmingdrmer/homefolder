#!/bin/bash

# PS4='$(gdate "+%s.%N ($LINENO) + ")'

git_option_no_edit="--no-edit"

one_changed='"$(git diff --name-only --relative HEAD | head -n1)"'
commit_message_one_file='"$(git status --short --ignore-submodules --untracked-files=no | head -n1)"'

commands="\
c1   ,        commit -m $commit_message_one_file $one_changed           # commit one file
d    ,        diff --color --find-renames
g    g,lo,r,  log --color --decorate --abbrev-commit --find-renames
l    ld,r,    log --color --decorate --abbrev-commit --find-renames
mc   ,        merge $git_option_no_edit --commit --no-ff
mf   ,        merge $git_option_no_edit --commit --ff-only
sb   ,        status --short --branch                                   # status with branch info
sf   ,        diff --name-only --relative HEAD                          # status about file changes
st   ,        status\
"

get_shortcut=0

shortcmd="$1"
shift

if [ "$shortcmd" = "list_shortcut" ]; then
    while read shortcut xx; do
        [ -z "$shortcut" ] && continue
        echo $shortcut
    done<<<"$commands"
    exit 0
fi

if [ "$shortcmd" = "get_shortcut" ]; then
    get_shortcut=1
    shortcmd="$1"
    shift
fi

found=0
while read shortcut flag cmd; do
    # [ -z "$shortcut" ] && continue
    len_shortcut=${#shortcut}
    if [ "$shortcut" = "${shortcmd:0:$len_shortcut}" ]; then
        export GIT_COMMA_FLAG="$(echo "$flag" | tr -d ',')"
        found=1
        break
    fi
done<<<"$commands"

[ "$found" = "0" ] && {
    echo invalid command $shortcmd >&2
    exit 1
}

arg1=${shortcmd:$len_shortcut}

if [ "$get_shortcut" = "1" ]; then
    echo $shortcut
    exit 0
fi

eval git $(_git_xp_interrept_flag conf $arg1) \
    $cmd \
    "$(_git_xp_interrept_flag arg $arg1)" "$@"

